{
  "name": "@moreutils/sponge",
  "version": "0.1.0",
  "tasks": {
    "all": "         deno lint --fix && deno fmt && deno task check        && deno task readme && deno task test          && deno task coverage         ",
    "all-reload": "  deno lint --fix && deno fmt && deno task check-reload && deno task readme && deno task test --reload && deno task coverage --reload",
    "check": "       deno task foreach-file -- deno check          '{}'",
    "check-reload": "deno task foreach-file -- deno check --reload '{}'",
    "test": "        deno test --coverage --clean",
    "coverage": "    deno coverage",
    "readme": "      touch README.md && chmod +w README.md && ./readme/generate-readme.ts readme/README.md > README.md && deno fmt README.md; chmod -w README.md",
    "release": "     deno task all && test -z \"$(git status --porcelain)\" && GITHUB_TOKEN=$(gh auth token) deno run --allow-env=GITHUB_TOKEN --allow-net=api.github.com --allow-run=bash https://deno.land/x/shipit@0.6.1/shipit.ts",
    "udd": "         deno task foreach-file -- deno run --allow-read=. --allow-write=. --allow-net --allow-run=deno https://deno.land/x/udd@0.8.2/main.ts --test \"deno task all\" '{}'",
    "udd-no-test": " deno task foreach-file -- deno run --allow-read=. --allow-write=. --allow-net --allow-run=deno https://deno.land/x/udd@0.8.2/main.ts                          '{}'",
    "on-file-save": "sh -c 'err=$(NO_COLOR=1 deno fmt \"$1\" 2>&1); if [ $? -eq 0 ] || [ \"$err\" != \"error: No target files found.\" ]; then echo \"$err\"; fi; if [ \"$(echo \"$1\" | cut -c 1-7)\" = \"readme/\" ]; then deno task readme; fi' -s",
    "list-files": "  deno eval 'console.log((await (await import(\"https://deno.land/x/run_simple@2.3.0/mod.ts\")).run(\"git ls-files\")).split(\"\\n\").filter(f=>/\\.((mj|j|t)sx?|jsonc?)$/.test(f)).filter(f=>{try{return !Deno.statSync(f).isDirectory}catch{}}).join(\"\\n\"))'",
    "foreach-file": "deno task list-files | sh -c 'xargs -I {} -- \"$@\"'"
  },
  "imports": {
    "@std/assert": "jsr:@std/assert@^0.226.0",
    "@std/cli": "jsr:@std/cli@^0.224.6",
    "@std/io": "jsr:@std/io@^0.224.1",
    "@std/testing": "jsr:@std/testing@^0.225.1"
  },
  "exports": {
    ".": "./src/cli.ts"
  },
  "publish": {
    "exclude": [
      "readme",
      ".idea",
      ".vscode",
      "coverage"
    ]
  }
}
